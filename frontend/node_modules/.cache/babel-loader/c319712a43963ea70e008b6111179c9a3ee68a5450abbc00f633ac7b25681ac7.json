{"ast":null,"code":"var _jsxFileName = \"C:\\\\story-audio-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StoryForm from './components/StoryForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [story, setStory] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [storyUrl, setStoryUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!prompt.trim()) {\n      setError('Prompt cannot be empty.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setStory('');\n\n    // --- MOCK API CALL (We will replace this with a real backend call later) ---\n    try {\n      console.log('Generating story for prompt:', prompt);\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      const mockStoryText = `In a realm sculpted by Tailwind CSS and animated by Framer Motion, a tale was requested about \"${prompt}\". The AI, now more stylish than ever, began its narration...`;\n      const mockStoryBlob = new Blob([mockStoryText], {\n        type: 'text/plain'\n      });\n      const mockAudioBlob = new Blob(['mock-audio-data'], {\n        type: 'audio/mpeg'\n      });\n      setStory(mockStoryText);\n      setStoryUrl(URL.createObjectURL(mockStoryBlob));\n      setAudioUrl(URL.createObjectURL(mockAudioBlob));\n    } catch (err) {\n      setError('Failed to generate story. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n    // --- END OF MOCK API CALL ---\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-gray-800 text-white p-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center\",\n        children: \"AI Story & Audio Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-300 mt-2\",\n        children: \"Bring your imagination to life with a single prompt.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex flex-col items-center p-6\",\n      children: [/*#__PURE__*/_jsxDEV(StoryForm, {\n        prompt: prompt,\n        setPrompt: setPrompt,\n        handleSubmit: handleSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 text-red-700 bg-red-100 border border-red-400 rounded-lg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        story: story,\n        storyUrl: storyUrl,\n        audioUrl: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bkcu3Fq8iCS0HcSU2RbaHXOj8sM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StoryForm","ResultDisplay","LoadingSpinner","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","story","setStory","audioUrl","setAudioUrl","storyUrl","setStoryUrl","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","trim","console","log","Promise","resolve","setTimeout","mockStoryText","mockStoryBlob","Blob","type","mockAudioBlob","URL","createObjectURL","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/story-audio-project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport StoryForm from './components/StoryForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport LoadingSpinner from './components/LoadingSpinner';\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n  const [story, setStory] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [storyUrl, setStoryUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!prompt.trim()) {\n      setError('Prompt cannot be empty.');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setStory('');\n\n    // --- MOCK API CALL (We will replace this with a real backend call later) ---\n    try {\n      console.log('Generating story for prompt:', prompt);\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      const mockStoryText = `In a realm sculpted by Tailwind CSS and animated by Framer Motion, a tale was requested about \"${prompt}\". The AI, now more stylish than ever, began its narration...`;\n      const mockStoryBlob = new Blob([mockStoryText], { type: 'text/plain' });\n      const mockAudioBlob = new Blob(['mock-audio-data'], { type: 'audio/mpeg' });\n\n      setStory(mockStoryText);\n      setStoryUrl(URL.createObjectURL(mockStoryBlob));\n      setAudioUrl(URL.createObjectURL(mockAudioBlob));\n\n    } catch (err) {\n      setError('Failed to generate story. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n    // --- END OF MOCK API CALL ---\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 font-sans\">\n      <header className=\"bg-gray-800 text-white p-6 shadow-md\">\n        <h1 className=\"text-4xl font-bold text-center\">AI Story & Audio Generator</h1>\n        <p className=\"text-center text-gray-300 mt-2\">Bring your imagination to life with a single prompt.</p>\n      </header>\n\n      <main className=\"flex flex-col items-center p-6\">\n        <StoryForm\n          prompt={prompt}\n          setPrompt={setPrompt}\n          handleSubmit={handleSubmit}\n          isLoading={isLoading}\n        />\n\n        {error && (\n          <div className=\"mt-4 p-4 text-red-700 bg-red-100 border border-red-400 rounded-lg\">\n            {error}\n          </div>\n        )}\n\n        {isLoading && <LoadingSpinner />}\n        \n        <ResultDisplay story={story} storyUrl={storyUrl} audioUrl={audioUrl} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}