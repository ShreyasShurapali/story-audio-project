{"ast":null,"code":"var _jsxFileName = \"C:\\\\story-audio-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StoryForm from './components/StoryForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport LoadingSpinner from './components/LoadingSpinner';\n\n// Helper function to convert a Base64 string to a downloadable Blob\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base64ToBlob = (base64, contentType = 'audio/mpeg') => {\n  const byteCharacters = atob(base64);\n  const byteNumbers = new Array(byteCharacters.length);\n  for (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n  const byteArray = new Uint8Array(byteNumbers);\n  return new Blob([byteArray], {\n    type: contentType\n  });\n};\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [story, setStory] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [storyUrl, setStoryUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!prompt.trim()) {\n      setError('Prompt cannot be empty.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setStory('');\n    try {\n      // --- REAL API CALL TO SPRING BOOT BACKEND ---\n      const response = await fetch('http://localhost:8080/api/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: prompt\n        }) // Send prompt as JSON\n      });\n      if (!response.ok) {\n        // Handle server-side errors (e.g., 500 Internal Server Error)\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n      const data = await response.json(); // Parse the JSON response from the backend\n\n      // Set the story text to be displayed on the page\n      setStory(data.story);\n\n      // Create a downloadable Blob for the story text file\n      const storyBlob = new Blob([data.story], {\n        type: 'text/plain'\n      });\n      setStoryUrl(URL.createObjectURL(storyBlob));\n\n      // Decode the Base64 audio string and create a downloadable Blob\n      const audioBlob = base64ToBlob(data.audioBase64);\n      setAudioUrl(URL.createObjectURL(audioBlob));\n    } catch (err) {\n      console.error(\"API call failed:\", err);\n      setError('Failed to generate story. Please ensure the backend is running and reachable.');\n    } finally {\n      setIsLoading(false);\n    }\n    // --- END OF REAL API CALL ---\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-gray-800 text-white p-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center\",\n        children: \"AI Story & Audio Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-300 mt-2\",\n        children: \"Bring your imagination to life with a single prompt.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex flex-col items-center p-6\",\n      children: [/*#__PURE__*/_jsxDEV(StoryForm, {\n        prompt: prompt,\n        setPrompt: setPrompt,\n        handleSubmit: handleSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 text-red-700 bg-red-100 border border-red-400 rounded-lg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        story: story,\n        storyUrl: storyUrl,\n        audioUrl: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bkcu3Fq8iCS0HcSU2RbaHXOj8sM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StoryForm","ResultDisplay","LoadingSpinner","jsxDEV","_jsxDEV","base64ToBlob","base64","contentType","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","Blob","type","App","_s","prompt","setPrompt","story","setStory","audioUrl","setAudioUrl","storyUrl","setStoryUrl","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","storyBlob","URL","createObjectURL","audioBlob","audioBase64","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/story-audio-project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport StoryForm from './components/StoryForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport LoadingSpinner from './components/LoadingSpinner';\n\n// Helper function to convert a Base64 string to a downloadable Blob\nconst base64ToBlob = (base64, contentType = 'audio/mpeg') => {\n  const byteCharacters = atob(base64);\n  const byteNumbers = new Array(byteCharacters.length);\n  for (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n  const byteArray = new Uint8Array(byteNumbers);\n  return new Blob([byteArray], { type: contentType });\n};\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n  const [story, setStory] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [storyUrl, setStoryUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!prompt.trim()) {\n      setError('Prompt cannot be empty.');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setStory('');\n\n    try {\n      // --- REAL API CALL TO SPRING BOOT BACKEND ---\n      const response = await fetch('http://localhost:8080/api/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt: prompt }), // Send prompt as JSON\n      });\n\n      if (!response.ok) {\n        // Handle server-side errors (e.g., 500 Internal Server Error)\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n\n      const data = await response.json(); // Parse the JSON response from the backend\n\n      // Set the story text to be displayed on the page\n      setStory(data.story);\n\n      // Create a downloadable Blob for the story text file\n      const storyBlob = new Blob([data.story], { type: 'text/plain' });\n      setStoryUrl(URL.createObjectURL(storyBlob));\n      \n      // Decode the Base64 audio string and create a downloadable Blob\n      const audioBlob = base64ToBlob(data.audioBase64);\n      setAudioUrl(URL.createObjectURL(audioBlob));\n      \n    } catch (err) {\n      console.error(\"API call failed:\", err);\n      setError('Failed to generate story. Please ensure the backend is running and reachable.');\n    } finally {\n      setIsLoading(false);\n    }\n    // --- END OF REAL API CALL ---\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 font-sans\">\n      <header className=\"bg-gray-800 text-white p-6 shadow-md\">\n        <h1 className=\"text-4xl font-bold text-center\">AI Story & Audio Generator</h1>\n        <p className=\"text-center text-gray-300 mt-2\">Bring your imagination to life with a single prompt.</p>\n      </header>\n\n      <main className=\"flex flex-col items-center p-6\">\n        <StoryForm\n          prompt={prompt}\n          setPrompt={setPrompt}\n          handleSubmit={handleSubmit}\n          isLoading={isLoading}\n        />\n\n        {error && (\n          <div className=\"mt-4 p-4 text-red-700 bg-red-100 border border-red-400 rounded-lg\">\n            {error}\n          </div>\n        )}\n\n        {isLoading && <LoadingSpinner />}\n        \n        <ResultDisplay story={story} storyUrl={storyUrl} audioUrl={audioUrl} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}